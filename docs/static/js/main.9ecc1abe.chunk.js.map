{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","AppWithLocalStorage.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","onAdd","showAdd","title","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","showAddTask","setShowAddTask","useEffect","tasksFromLocalDb","response","localStorage","getItem","json","JSON","parse","setItem","stringify","fetchTasks","getTasks","newTasks","length","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ecc1abe.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn\" \r\n        style={{backgroundColor: color}}\r\n        onClick={onClick}>\r\n        {text}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nconst Header = ({onAdd, showAdd}) => {\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1> Task Tracker </h1>\r\n      <Button \r\n        color={showAdd ? 'red' : 'green'}\r\n        text={showAdd ? 'Done' : 'Add'} \r\n        onClick={onAdd}/>\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n  return (\r\n    <div className={`task ${task.reminder?'reminder':''}`}\r\n      onDoubleClick={()=>{onToggle(task.id)}}>\r\n      <h3>\r\n        { task.text }\r\n        <FaTimes \r\n          style = {{color: 'red', cursor: 'pointer'}}\r\n          onClick={() => {onDelete(task.id)}}\r\n        />\r\n      </h3>\r\n      <p>{ task.day }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} \r\n          task={task} \r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n\r\n  const [text, setText] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit  = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(!text){\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    onAdd({text, day, reminder})\r\n    \r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input type=\"text\" placeholder='Add Task' \r\n        value={text} onChange={(e) => setText(e.target.value)}/>\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input type=\"text\" placeholder='Add day & time'\r\n        value={day} onChange={(e) => setDay(e.target.value)}/>\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input type=\"checkbox\" placeholder='Add Task' checked={reminder}\r\n        value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n      </div>\r\n\r\n      <input type=\"submit\" value='Save Task' className='btn btn-block'/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState, useEffect } from 'react'\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\n\r\nconst App = () => {\r\n\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n\r\n  // Fetch tasks\r\n  const fetchTasks = () => {\r\n    const response = localStorage.getItem(\"tasks\")\r\n    const json = JSON.parse(response)\r\n    if (json === null) localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    return json || tasks;\r\n  }\r\n\r\n  // Add task\r\n  const addTask = (task) => {\r\n    const newTasks = [...tasks, {id:tasks.length+1, ...task}]\r\n    setTasks(newTasks)\r\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks))\r\n  }\r\n\r\n  // delete a task\r\n  const deleteTask = (id) => {\r\n    const newTasks = tasks.filter((task)=>task.id!==id)\r\n    setTasks(newTasks)\r\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks))\r\n  }\r\n\r\n  // Toggle Reminder\r\n  const toggleReminder = (id) => {\r\n    const newTasks = tasks.map((task) => task.id === id \r\n    ? {...task, reminder: !task.reminder} : task)\r\n    setTasks(newTasks)\r\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks))\r\n  }\r\n\r\n  // fetching data from backend at first load\r\n  useEffect(() => {\r\n    const getTasks = () => {\r\n      const tasksFromLocalDb = fetchTasks()\r\n      setTasks(tasksFromLocalDb)\r\n    }\r\n\r\n    getTasks()\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\r\n      {showAddTask && <AddTask onAdd={addTask}/>}\r\n      {tasks.length > 0 ? \r\n        <Tasks \r\n          tasks={tasks} \r\n          onDelete={deleteTask} \r\n          onToggle={toggleReminder}\r\n        /> :\r\n        <h4>Task list is empty</h4>\r\n      }     \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\nimport App from './AppWithLocalStorage';\r\n// import App from './AppWithBackendCode';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}